!function(){"use strict";function a(a){a.go("planner")}angular.module("mealPlanner",["ngMaterial","ui.router","mealPlanner.environment","mealPlanner.users","mealPlanner.navigation","mealPlanner.nutrients","mealPlanner.ingredients","mealPlanner.recipes","mealPlanner.planner"]).run(a),a.$inject=["$state"]}(),function(){"use strict";function a(a){a.theme("default").primaryPalette("green",{"default":"800","hue-1":"700","hue-2":"600","hue-3":"500"}).accentPalette("red",{"default":"600"}),a.theme("dark").primaryPalette("lime").accentPalette("pink"),a.theme("error-toast")}angular.module("mealPlanner").config(a),a.$inject=["$mdThemingProvider"]}(),function(){"use strict";angular.module("mealPlanner.environment",[]).constant("ENV",{apiEndpoint:"https://api.meal-planner.org/",contentEndpoint:"//content.meal-planner.org/"})}(),function(){"use strict";function a(a,b,c){a.$on("$stateChangeStart",function(){c.navigationBar.isLoading=!0}),a.$on("$stateChangeSuccess",function(){b.current.pageTitle&&(c.navigationBar.title=b.current.pageTitle),c.navigationBar.isLoading=!1,c.navigationBar.searchCallback=null,c.navigationBar.isSearchInputVisible=!1,window.Intercom("update")}),a.$on("$stateChangeError",function(a){a.preventDefault(),c.handleError()})}angular.module("mealPlanner.navigation",[]).run(a),a.$inject=["$rootScope","$state","NavigationService"]}(),function(){"use strict";function a(a){function b(b){this.navigationBar.isLoading=!1,b=b||"Sorry, the request could not be performed.",a.show(a.simple().content(b).position("bottom left").hideDelay(5e3).theme("error-toast"))}return{navigationBar:{title:"",searchCallback:null,isSearchInputVisible:!1,isLoading:!1,avatar:"images/icons/avatar-default.png"},links:[{label:"Meal Plan",state:"planner"},{label:"Recipes",state:"recipesGroups"},{label:"Ingredients",state:"ingredientsGroups"}],handleError:b}}angular.module("mealPlanner.navigation").service("NavigationService",a),a.$inject=["$mdToast"]}(),function(){"use strict";function a(a,b,c){function d(){a.cancel()}var e=this;e.popupTitle=b,e.popupTemplateFile=c,e.cancelDialog=d}angular.module("mealPlanner.navigation").controller("PopupLinkController",a),a.$inject=["$mdDialog","title","template"]}(),function(){"use strict";function a(a,b,c,d,e){function f(f){function g(a){d("menu").close(),c.go(a)}function h(){a.history.back()}function i(){d("menu").toggle()}function j(){d("menu").close()}function k(){f.navigationBar.isSearchInputVisible=!0,f.searchQuery="",b(function(){document.getElementById("search-field").focus()})}function l(){f.searchQuery="",f.navigationBar.isSearchInputVisible=!1,f.navigationBar.searchCallback("")}f.navigationBar=e.navigationBar,f.links=e.links,f.isMenuButtonVisible=!0,f.go=g,f.goBack=h,f.openMenu=i,f.closeMenu=j,f.openSearch=k,f.closeSearch=l}return{restrict:"E",templateUrl:"modules/navigation/views/navbar.html",link:f}}angular.module("mealPlanner.navigation").directive("mpNavbar",a),a.$inject=["$window","$timeout","$state","$mdSidenav","NavigationService"]}(),function(){"use strict";function a(){return{restrict:"E",templateUrl:"modules/navigation/views/footer.html"}}angular.module("mealPlanner.navigation").directive("mpFooter",a)}(),function(){"use strict";function a(){function a(a){function b(b,c,d){b.preventDefault(),a.show({controller:"PopupLinkController",controllerAs:"ctrl",bindToController:!0,templateUrl:"modules/navigation/views/popup.html",parent:angular.element(document.body),targetEvent:b,clickOutsideToClose:!0,locals:{title:c,template:d}})}var c=this;c.showPopup=b}return a.$inject=["$mdDialog"],{restrict:"E",template:'<a href="{{ctrl.linkUrl}}" ng-click="ctrl.showPopup($event, ctrl.linkTitle, ctrl.linkUrl);">{{ctrl.linkTitle}}</a>',scope:{linkTitle:"@",linkUrl:"@"},controller:a,controllerAs:"ctrl",bindToController:!0}}angular.module("mealPlanner.navigation").directive("mpPopupLink",a)}(),function(){"use strict";angular.module("mealPlanner.images",["ngImgCrop"])}(),function(){"use strict";function a(){function a(a,b){function c(a){var b=(a.srcElement||a.target).files[0],c=new FileReader;c.onload=d,c.readAsDataURL(b)}function d(b){a.$apply(function(a){a.mpFileSelect.src=b.target.result})}b.bind("change",c)}return{link:a,scope:{mpFileSelect:"="}}}angular.module("mealPlanner.images").directive("mpFileSelect",a)}(),function(){"use strict";function a(a,b){a.isAuthenticated()&&b.afterLogin()}angular.module("mealPlanner.users",["ngResource","satellizer"]).run(a),a.$inject=["$auth","UserService"]}(),function(){"use strict";function a(a,b){a.baseUrl=b.apiEndpoint,a.signupUrl="user/signup",a.loginUrl="user/login",a.facebook({clientId:"426340670872316"}),a.google({clientId:"15031705694-hoe39g14p85avkng29d8a6itm4j1iek7.apps.googleusercontent.com"})}angular.module("mealPlanner.users").config(a),a.$inject=["$authProvider","ENV"]}(),function(){"use strict";function a(a){a.state("login",{url:"/login",templateUrl:"modules/users/views/login.html",controller:"UserLoginController",controllerAs:"ctrl",pageTitle:" "}).state("signup",{parent:"login",url:"^/signup",templateUrl:"modules/users/views/signup.html",controller:"UserSignUpController",controllerAs:"ctrl",pageTitle:" "}).state("forgot-password",{parent:"login",url:"^/forgot-password",templateUrl:"modules/users/views/forgot-password.html",controller:"UserForgotPasswordController",controllerAs:"ctrl",pageTitle:" "}).state("reset-password",{url:"/reset-password/:token",templateUrl:"modules/users/views/reset-password.html",controller:"UserResetPasswordController",controllerAs:"ctrl",pageTitle:"Reset Password"}).state("profile",{url:"/profile",templateUrl:"modules/users/views/profile.html",controller:"ProfileController",controllerAs:"ctrl",pageTitle:"Profile",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}]}})}angular.module("mealPlanner.users").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(){var a=b.defer();return d.isAuthenticated()?a.resolve():(c.path("/login"),e.navigationBar.isLoading=!1),a.promise}function h(){i().success(function(a){e.navigationBar.avatar=a.avatar,window.Intercom("boot",{app_id:"b7cghyas",name:a.display_name,email:a.email,created_at:a.created_at})})}function i(){return a.get(f.apiEndpoint+"user/profile")}function j(b){return a.post(f.apiEndpoint+"user/password_reset_request",{email:b})}function k(b,c){return a.post(f.apiEndpoint+"user/reset_password",{token:b,new_password:c})}return{isAuthenticated:g,afterLogin:h,getProfile:i,requestPasswordReset:j,resetPassword:k}}angular.module("mealPlanner.users").service("UserService",a),a.$inject=["$http","$q","$location","$auth","NavigationService","ENV"]}(),function(){"use strict";function a(a,b,c,d){function e(){d.navigationBar.isLoading=!0,h.loginButtonLocked=!0,a.login({email:h.email,password:h.password})["catch"](g)}function f(b){a.authenticate(b).then(function(){c.afterLogin()})["catch"](g)}function g(a){if(d.navigationBar.isLoading=!1,h.loginButtonLocked=!1,a.status){var c=a.data&&a.data.error?a.data.error:"Error during request.";b.show(b.alert().clickOutsideToClose(!0).title("Log in error").content(c).ariaLabel("Could not log in").ok("OK"))}}var h=this;h.loginButtonLocked=!1,h.login=e,h.authenticate=f}angular.module("mealPlanner.users").controller("UserLoginController",a),a.$inject=["$auth","$mdDialog","UserService","NavigationService"]}(),function(){"use strict";function a(a,b,c){function d(){e.signUpButtonLocked=!0,c.navigationBar.isLoading=!0,a.signup(e.user)["catch"](function(a){e.signUpButtonLocked=!1,c.navigationBar.isLoading=!1;var d=a.data&&a.data.error?a.data.error:"Error during request.";b.show(b.alert().clickOutsideToClose(!0).title("Could not complete sign up").content(d).ariaLabel("Could not complete sign up").ok("OK"))})}var e=this;e.user={},e.signUpButtonLocked=!1,e.signUp=d}angular.module("mealPlanner.users").controller("UserSignUpController",a),a.$inject=["$auth","$mdDialog","NavigationService"]}(),function(){"use strict";function a(a,b,c){function d(){c.requestPasswordReset(e.email).then(function(){a.go("login"),b.show(b.alert().clickOutsideToClose(!0).title("Password reset").content('We have sent password reset link to "'+e.email+'", if there is an account associated with this email.').ariaLabel("Password reset").ok("OK"))})}var e=this;e.requestPasswordReset=d}angular.module("mealPlanner.users").controller("UserForgotPasswordController",a),a.$inject=["$state","$mdDialog","UserService"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){e.navigationBar.isLoading=!0,g.submitButtonDisabled=!0,d.resetPassword(a.token,g.password).then(function(a){c.setToken(a),d.afterLogin(),b.show({template:"<md-toast>Your password was updated</md-toast>",position:"bottom left",hideDelay:3e3})})["catch"](function(){g.submitButtonDisabled=!1,e.handleError("Could not update the password")})}var g=this;g.requestPasswordReset=f}angular.module("mealPlanner.users").controller("UserResetPasswordController",a),a.$inject=["$stateParams","$mdToast","$auth","UserService","NavigationService"]}(),function(){"use strict";function a(a,b,c){function d(){a.isAuthenticated()&&b.getProfile().success(function(a){f.profile=a})}function e(){a.isAuthenticated()&&(a.logout(),window.Intercom("shutdown"),c.navigationBar.avatar="images/icons/avatar-default.png")}var f=this;return f.logout=e,d()}angular.module("mealPlanner.users").controller("ProfileController",a),a.$inject=["$auth","UserService","NavigationService"]}(),function(){"use strict";angular.module("mealPlanner.nutrients",[])}(),function(){"use strict";function a(a){function b(){return[{label:"Calories",code:"energy",unit:"kcal",group:"Main Nutrients",sort:1},{label:"Total Fat",code:"fat",unit:"g",precision:1,group:"Main Nutrients",sort:5},{label:"Saturated fat",code:"fat_saturated",unit:"g",precision:1,group:"Main Nutrients",subNutrient:!0,sort:10},{label:"Monounsaturated fat",code:"fat_monounsaturated",unit:"g",precision:1,group:"Main Nutrients",subNutrient:!0,sort:15},{label:"Polyunsaturated fat",code:"fat_polyunsaturated",unit:"g",precision:1,group:"Main Nutrients",subNutrient:!0,sort:20},{label:"Trans fat",code:"fat_trans",unit:"g",precision:2,group:"Main Nutrients",subNutrient:!0,sort:25},{label:"Cholesterol",code:"cholesterol",unit:"mg",group:"Main Nutrients",sort:30},{label:"Sodium, Na",code:"sodium",unit:"mg",group:"Main Nutrients",sort:35},{label:"Total Carbs",code:"carbohydrate",unit:"g",precision:1,group:"Main Nutrients",sort:40},{label:"Dietary Fiber",code:"fiber",unit:"g",precision:1,group:"Main Nutrients",subNutrient:!0,sort:45},{label:"Sugar",code:"sugar",unit:"g",precision:1,group:"Main Nutrients",subNutrient:!0,sort:50},{label:"Protein",code:"protein",unit:"g",precision:1,group:"Main Nutrients",sort:55},{label:"Vitamin A",code:"vitamin_a_iu",unit:"IU",group:"Vitamins",sort:100},{label:"Vitamin B-6",code:"vitamin_b6",unit:"mg",group:"Vitamins",sort:105},{label:"Vitamin B-12",code:"vitamin_b12",unit:"µg",group:"Vitamins",sort:110},{label:"Vitamin C",code:"vitamin_c",unit:"mg",group:"Vitamins",sort:115},{label:"Vitamin D",code:"vitamin_d",unit:"IU",group:"Vitamins",sort:120},{label:"Vitamin E",code:"vitamin_e",unit:"mg",precision:2,group:"Vitamins",sort:125},{label:"Vitamin K",code:"vitamin_k",unit:"µg",group:"Vitamins",sort:130},{label:"Niacin",code:"niacin",unit:"mg",group:"Vitamins",sort:135},{label:"Thiamin",code:"thiamin",unit:"mg",precision:2,group:"Vitamins",sort:140},{label:"Riboflavin",code:"riboflavin",unit:"mg",precision:2,group:"Vitamins",sort:145},{label:"Folate",code:"folate_dfe",unit:"µg",group:"Vitamins",sort:150},{label:"Calcium, Ca",code:"calcium",unit:"mg",group:"Minerals",sort:200},{label:"Iron, Fe",code:"iron",unit:"mg",precision:1,group:"Minerals",sort:205},{label:"Potassium, K",code:"potassium",unit:"mg",group:"Minerals",sort:210},{label:"Magnesium, Mg",code:"magnesium",unit:"mg",group:"Minerals",sort:220},{label:"Phosphorus, P",code:"phosphorus",unit:"mg",group:"Minerals",sort:225},{label:"Zinc, Zn",code:"zinc",unit:"mg",group:"Minerals",sort:230},{label:"Iodine, I",code:"iodine",unit:"µg",group:"Minerals"},{label:"Selenium, Se",code:"selenium",unit:"µg",group:"Minerals"},{label:"Copper, Cu",code:"copper",unit:"mg",group:"Minerals"},{label:"Manganese, Mn",code:"manganese",unit:"mg",group:"Minerals"},{label:"Chromium, Cr",code:"chromium",unit:"µg",group:"Minerals"},{label:"Molybdenum, Mo",code:"molybdenum",unit:"µg",group:"Minerals"},{label:"Chloride, Cl",code:"chloride",unit:"µg",group:"Minerals"},{label:"Water",code:"water",unit:"g",group:"Other"},{label:"Caffeine",code:"caffeine",unit:"mg",group:"Other"},{label:"Pantothenic acid",code:"pantothenic_acid",unit:"mg",group:"Other"}]}function c(){return a.get("modules/nutrients/data/daily_values.json",{cache:!0}).then(function(a){return a.data})}return{getAvailableNutrients:b,getDailyValues:c}}angular.module("mealPlanner.nutrients").service("NutrientService",a),a.$inject=["$http"]}(),function(){"use strict";function a(a,b){function c(a,b,c,d,e,f,g){var h=this;h.code=a,h.precision=b,h.value=0,h.group=c,h.label=d,h.unit=e,h.subNutrient=f,h.sortOrder=g}function d(b,d,f){var g=a("filter")(e,{code:b})[0];if(g){var h=new c(b,f||g.precision||0,g.group,g.label,g.unit,g.subNutrient||!1,g.sort||9999);return d>0&&(h.value=d),h}return!1}var e=b.getAvailableNutrients();return c.build=d,c}angular.module("mealPlanner.nutrients").factory("NutrientFactory",a),a.$inject=["$filter","NutrientService"]}(),function(){"use strict";function a(a){function b(){this.items=[]}function c(a){this.items.push(a)}function d(a){var b=-1;return this.items.some(function(c,d){return c.code===a?(b=d,!0):void 0}),-1!==b?this.items[b]:!1}function e(a){var b=this.items.indexOf(a);-1!==b&&this.items.splice(b,1)}function f(a){var b=this;a.items.forEach(function(a){var c=b.find(a.code);c?c.value+=a.value:b.push(angular.copy(a))})}function g(a){this.items.forEach(function(b){var c=a.find(b.code);c&&(b.value-=c.value)})}function h(){return new b}function i(b){var c=h();for(var d in b)if(b.hasOwnProperty(d)){var e=a.build(d,b[d]);e&&c.push(e)}return c}function j(){var a={};return this.items.forEach(function(b){a[b.code]=b.value}),a}return b.prototype.push=c,b.prototype.find=d,b.prototype.remove=e,b.prototype.sum=f,b.prototype.subtract=g,b.prototype.toJson=j,b.build=h,b.fromJson=i,b}angular.module("mealPlanner.nutrients").factory("NutrientCollectionFactory",a),a.$inject=["NutrientFactory"]}(),function(){"use strict";function a(){return{templateUrl:"modules/nutrients/views/label.html",scope:{servings:"@?",nutrients:"="}}}angular.module("mealPlanner.nutrients").directive("mpNutritionLabel",a)}(),function(){"use strict";function a(a){function b(b){a.getDailyValues().then(function(a){b.dailyValues=a})}return{templateUrl:"modules/nutrients/views/nutrient-table.html",link:b,scope:{nutrients:"=",filterGroup:"@",noMargin:"@"}}}angular.module("mealPlanner.nutrients").directive("mpNutrientTable",a),a.$inject=["NutrientService"]}(),function(){"use strict";function a(){function a(a){function b(){a.chartData=c()}function c(){a.energy=a.nutrients.find("energy"),a.fat=a.nutrients.find("fat"),a.protein=a.nutrients.find("protein"),a.carbohydrate=a.nutrients.find("carbohydrate");var b=Math.round(9*a.fat.value/a.energy.value*100),c=Math.round(4*a.protein.value/a.energy.value*100),d=100-b-c;return[{label:"Protein",value:c,color:"#1E88E5"},{label:"Carbs",value:d,color:"#FB8C00"},{label:"Fat",value:b,color:"#43A047"}]}a.chartOptions={responsive:!0,maintainAspectRatio:!1,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:60,animateRotate:!1,tooltipTemplate:"<%if (label){%><%=label%>: <%}%><%= value %>%"},a.$watch("nutrients.items",b,!0)}return{templateUrl:"modules/nutrients/views/energy-chart.html",link:a,scope:{nutrients:"="}}}angular.module("mealPlanner.nutrients").directive("mpEnergyChart",a)}(),function(){"use strict";angular.module("mealPlanner.ingredients",["ngResource","mealPlanner.images"])}(),function(){"use strict";function a(a){function b(a,b){return b.getIngredients(a.group)}function c(a,b){var c=a.build();return c.measures.push({qty:100,label:"g",eqv:100,nutrients:b.fromJson({energy:0,fat:0,carbohydrate:0,protein:0})}),c}function d(a,b,c){return b.getIngredient(a.ingredientId).then(function(a){return a.measures.forEach(function(b,d){a.measures[d].nutrients=c.fromJson(b.nutrients)}),a})}function e(a,b,c){return d(a,b,c).then(function(a){return a.forked_from=a.id,a.name="Fork: "+a.name,a.id=null,a})}function f(a,b){return b.getIngredient(a.ingredientId)}function g(a){return a.getGroups()}a.state("ingredientsGroups",{url:"/ingredients/",templateUrl:"modules/ingredients/views/groups.html",controller:"IngredientsGroupsController",controllerAs:"ctrl",pageTitle:"Ingredients",resolve:{groups:g}}).state("ingredientsList",{url:"/ingredients/:group",templateUrl:"modules/ingredients/views/list.html",controller:"IngredientsListController",controllerAs:"ctrl",resolve:{ingredients:b}}).state("createIngredient",{url:"/ingredients/create/",templateUrl:"modules/ingredients/views/edit.html",controller:"IngredientsEditController as ctrl",controllerAs:"ctrl",pageTitle:"Create New Ingredient",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}],foodGroups:g,ingredient:c}}).state("editIngredient",{url:"/ingredients/edit/:ingredientId",templateUrl:"modules/ingredients/views/edit.html",controller:"IngredientsEditController",controllerAs:"ctrl",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}],foodGroups:g,ingredient:d}}).state("forkIngredient",{url:"/ingredients/fork/:ingredientId",templateUrl:"modules/ingredients/views/edit.html",controller:"IngredientsEditController",controllerAs:"ctrl",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}],foodGroups:g,ingredient:e}}).state("viewIngredient",{url:"/ingredients/view/:ingredientId",templateUrl:"modules/ingredients/views/view.html",controller:"IngredientViewController",controllerAs:"ctrl",resolve:{ingredient:f}}),b.$inject=["$stateParams","IngredientService"],c.$inject=["IngredientFactory","NutrientCollectionFactory"],d.$inject=["$stateParams","IngredientService","NutrientCollectionFactory"],e.$inject=["$stateParams","IngredientService","NutrientCollectionFactory"],f.$inject=["$stateParams","IngredientService"],g.$inject=["IngredientGroupService"]}angular.module("mealPlanner.ingredients").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a,b,c){function d(){var a=this;a.measures=[],a.imageCrop=""}function e(){var a=this.measures[this.selectedMeasure],b=this.selectedAmount;this.nutrients.items.forEach(function(c){c.value=a.nutrients[c.code]/a.qty*b})}function f(){return new d}function g(d){var e=f();e.id=d.id,e.forked_from=d.forked_from,e.can_edit=d.can_edit,d.ndbno&&(e.ndbno=d.ndbno),e.name=d.name,e.group=d.group,e.generic=d.generic;var g=d.image_url||c.getGroupIcon(e.group);e.imageUrl=a.contentEndpoint+g,e.measures=d.measures,e.selectedMeasure=0;var h=e.measures[e.selectedMeasure];return e.selectedAmount=h.qty,e.nutrients=b.fromJson(h.nutrients),e}function h(){var a={id:this.id,forked_from:this.forked_from,name:this.name,group:this.group,generic:this.generic,image_crop:this.imageCrop,measures:this.measures.map(function(a){return{label:a.label,eqv:a.eqv,qty:a.qty,nutrients:a.nutrients.toJson()}})};return a}return d.prototype.updateNutritionValues=e,d.prototype.toJson=h,d.fromJson=g,d.build=f,d}angular.module("mealPlanner.ingredients").factory("IngredientFactory",a),a.$inject=["ENV","NutrientCollectionFactory","IngredientGroupService"]}(),function(){"use strict";function a(a,b){function c(){function c(a){return a.map(function(a){return a.background=b.contentEndpoint+a.background,a})}return a.get("modules/ingredients/data/group.json",{cache:!0}).then(function(a){return c(a.data)})}function d(a){return e.hasOwnProperty(a)?e[a]:"ingredient/image/default-icon.png"}var e={Meat:"ingredient/meat-group.png","Fish & Seafood":"ingredient/fish-group.png",Poultry:"ingredient/poultry-group.png","Nuts & Seeds":"ingredient/nuts-group.png",Legumes:"ingredient/legumes-group.png","Dairy & Eggs":"ingredient/dairy-group.png",Vegetables:"ingredient/vegetables-group.png",Grains:"ingredient/grains-group.png",Fruits:"ingredient/fruits-group.png",Beverages:"ingredient/beverages-group.png","Sweets & Deserts":"ingredient/sweets-group.png",Other:"ingredient/other-group.png"};return{getGroups:c,getGroupIcon:d}}angular.module("mealPlanner.ingredients").service("IngredientGroupService",a),a.$inject=["$http","ENV"]}(),function(){"use strict";function a(a,b,c){function d(a){function c(a){return b.fromJson(a)}return j.get({id:a}).$promise.then(c)}function e(a,b,c){return j.query({filter_by:"group",filter_value:a,start:b,size:c}).$promise.then(g)}function f(a,b){return j.query({filter_by:"group",filter_value:b,query:a}).$promise.then(g)}function g(a){var c=[];return a.forEach(function(a){c.push(b.fromJson(a))}),c}function h(a,b){return a?j.update({id:a},b).$promise:j.save(b).$promise}function i(a){return j["delete"]({id:a}).$promise}var j=a(c.apiEndpoint+"ingredients/:id",null,{update:{method:"PUT"}});return{getIngredient:d,getIngredients:e,searchIngredients:f,saveIngredient:h,deleteIngredient:i}}angular.module("mealPlanner.ingredients").service("IngredientService",a),a.$inject=["$resource","IngredientFactory","ENV"]}(),function(){"use strict";function a(a){var b=this;b.groups=a}angular.module("mealPlanner.ingredients").controller("IngredientsGroupsController",a),a.$inject=["groups"]}(),function(){"use strict";function a(a,b,c,d){function e(b){f.isLoading=!0,c.searchIngredients(b,a.group).then(function(a){f.isLoading=!1,f.items=a})}var f=this;f.items=d,f.searchIngredients=e,b.navigationBar.title="Ingredients › "+a.group,b.navigationBar.searchCallback=e}angular.module("mealPlanner.ingredients").controller("IngredientsListController",a),a.$inject=["$stateParams","NavigationService","IngredientService","ingredients"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(){c.navigationBar.isLoading=!0,h.saveButtonDisabled=!0,d.saveIngredient(h.ingredient.id,h.ingredient.toJson()).then(function(c){a.go("viewIngredient",{ingredientId:c.id}),b.show({template:"<md-toast>Ingredient was saved!</md-toast>",position:"bottom left",hideDelay:3e3})},function(a){h.saveButtonDisabled=!1,c.handleError(a.data.error)})}var h=this;(e.id||e.forked_from)&&(c.navigationBar.title=e.name),h.ingredient=e,h.foodGroups=f,h.image={src:""},h.saveIngredient=g}angular.module("mealPlanner.ingredients").controller("IngredientsEditController",a),a.$inject=["$state","$mdToast","NavigationService","IngredientService","ingredient","foodGroups"]}(),function(){"use strict";function a(a,b,c,d){function e(){function c(a){g.ingredient.measures.forEach(function(c){var d=b.build(a);d&&c.nutrients.push(d)})}for(var d in g.selectedNutrients)g.selectedNutrients[d]===!0&&(c(d),delete g.availableNutrients[d]);a.cancel()}function f(){a.cancel()}var g=this;g.selectedNutrients={},g.ingredient=d,g.addNutrients=e,g.cancelDialog=f,g.availableNutrients={},c.getAvailableNutrients().forEach(function(a){d.measures[0].nutrients.find(a.code)||(g.availableNutrients[a.code]=a.label)})}angular.module("mealPlanner.ingredients").controller("IngredientNutrientSelectorController",a),a.$inject=["$mdDialog","NutrientFactory","NutrientService","ingredient"]}(),function(){"use strict";function a(a,b){var c=this;c.ingredient=b,a.navigationBar.title=b.name}angular.module("mealPlanner.ingredients").controller("IngredientViewController",a),a.$inject=["NavigationService","ingredient"]}(),function(){"use strict";function a(a){function b(b){function c(b){a.go("viewIngredient",{ingredientId:b})}b.viewIngredient=c}return{templateUrl:"modules/ingredients/views/directive.ingredient.html",link:b,scope:{ingredient:"=",last:"="}}}angular.module("mealPlanner.ingredients").directive("mpIngredientItem",a),a.$inject=["$state"]}(),function(){"use strict";function a(){function a(a){a.nutrient=a.ingredient.nutrients.find(a.code)}return{replace:!0,link:a,templateUrl:"modules/ingredients/views/directive.nutrient.html",scope:{ingredient:"=",code:"@"}}}angular.module("mealPlanner.ingredients").directive("mpIngredientNutrient",a)}(),function(){"use strict";function a(){function a(a){function b(){a.ingredient.selectedAmount=a.ingredient.measures[a.ingredient.selectedMeasure].qty,a.ingredient.updateNutritionValues()}a.updateSelectedMeasure=b}return{templateUrl:"modules/ingredients/views/directive.measure-selector.html",link:a,scope:{ingredient:"="}}}angular.module("mealPlanner.ingredients").directive("mpMeasureSelector",a)}(),function(){"use strict";function a(a,b){function c(c){function d(b){a.show({controller:"IngredientNutrientSelectorController",controllerAs:"ctrl",bindToController:!0,templateUrl:"modules/ingredients/views/nutrient-selector.html",targetEvent:b,locals:{ingredient:c.ingredient}})}function e(a){c.ingredient.measures.splice(a,1)}c.showNutrientSelector=d,c.removeMeasure=e,c.totalAvailableNutrients=b.getAvailableNutrients().length}return{templateUrl:"modules/ingredients/views/directive.edit-measure.html",link:c,scope:{ingredient:"="}}}angular.module("mealPlanner.ingredients").directive("mpIngredientEditMeasure",a),a.$inject=["$mdDialog","NutrientService"]}(),function(){"use strict";function a(a){function b(b){function c(){var c={},d=b.ingredient.measures[0];d&&d.nutrients.items.forEach(function(a){var e=a.value*b.measureEqv/d.qty;c[a.code]=Math.round(100*e)/100}),b.ingredient.measures.push({qty:b.measureQty,label:b.measureLabel,eqv:b.measureEqv,nutrients:a.fromJson(c)}),b.measureQty="",b.measureLabel="",b.measureEqv=""}b.addMeasure=c}return{templateUrl:"modules/ingredients/views/directive.add-measure.html",link:b,scope:{ingredient:"="}}}angular.module("mealPlanner.ingredients").directive("mpIngredientAddMeasure",a),a.$inject=["NutrientCollectionFactory"]}(),function(){"use strict";angular.module("mealPlanner.recipes",["ngResource","mealPlanner.images"])}(),function(){"use strict";function a(a){function b(a,b){return b.searchRecipes(a.filterName,a.filterValue)}function c(a){return a.build()}function d(a,b){return b.getRecipe(a.recipeId).then(function(a){return a.loadIngredients()})}function e(a){return a.getDishTypes()}function f(a){return a.getCuisines()}function g(a){return a.getKeyIngredients()}function h(a){return a.getDiets()}a.state("recipesGroups",{url:"/recipes/",templateUrl:"modules/recipes/views/groups.html",controller:"RecipesGroupsController",controllerAs:"ctrl",pageTitle:"Recipes",resolve:{dishTypes:e,cuisines:f,keyIngredients:g,diets:h}}).state("recipesList",{url:"/recipes/list/:filterName/:filterValue",templateUrl:"modules/recipes/views/list.html",controller:"RecipesListController",controllerAs:"ctrl",resolve:{recipes:b}}).state("createRecipe",{url:"/recipes/create",templateUrl:"modules/recipes/views/edit.html",controller:"RecipeEditController",controllerAs:"ctrl",pageTitle:"Create New Recipe",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}],dishTypes:e,cuisines:f,keyIngredients:g,diets:h,recipe:c}}).state("editRecipe",{url:"/recipes/edit/:recipeId",templateUrl:"modules/recipes/views/edit.html",controller:"RecipeEditController",controllerAs:"ctrl",resolve:{authenticated:["UserService",function(a){return a.isAuthenticated()}],dishTypes:e,cuisines:f,keyIngredients:g,diets:h,recipe:d}}).state("viewRecipe",{url:"/recipes/view/:recipeId",templateUrl:"modules/recipes/views/view.html",controller:"RecipeViewController",controllerAs:"ctrl",resolve:{recipe:d}}),b.$inject=["$stateParams","RecipeService"],c.$inject=["RecipeFactory"],d.$inject=["$stateParams","RecipeService"],e.$inject=["RecipeGroupService"],f.$inject=["RecipeGroupService"],g.$inject=["RecipeGroupService"],h.$inject=["RecipeGroupService"]}angular.module("mealPlanner.recipes").config(a),a.$inject=["$stateProvider"]}(),function(){"use strict";function a(a,b,c){function d(){var a=this;a.cuisine={},a.key_ingredient={},a.diet={},a.ingredients=[],a.steps=[""],a.nutrients=b.build(),a.imageCrop=""}function e(){return new d}function f(c){function d(a){return void 0!==a&&a.constructor===Array?a.reduce(function(a,b){return a[b]=!0,a},{}):{}}var f=e();f.id=c.id,f.can_edit=c.can_edit,f.name=c.name;var g=c.image_url||"recipe/image/default-icon.png";return f.imageUrl=a.contentEndpoint+g,f.time_to_cook=c.time_to_cook,f.dish_type=c.dish_type,f.cuisine=d(c.cuisine),f.key_ingredient=d(c.key_ingredient),f.diet=d(c.diet),f.servings=c.servings||1,f.ingredients=c.ingredients,f.nutrients=b.fromJson(c.nutrients),f.setServings(1),f.steps=c.steps,f}function g(){var a=[];return this.ingredients.forEach(function(b){c.getIngredient(b.id).then(function(c){var d=0;c.measures.some(function(a,c){return a.label===b.measure?(d=c,!0):void 0}),c.selectedMeasure=d,c.selectedMeasureLabel=b.measure,c.selectedAmount=b.measure_amount,c.updateNutritionValues(),a.push(c)})}),this.ingredients=a,this}function h(){function a(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&a[c]===!0&&b.push(c);return b}var c=this,d={id:c.id,name:c.name,image_crop:this.imageCrop,time_to_cook:c.time_to_cook,dish_type:c.dish_type,cuisine:a(c.cuisine),key_ingredient:a(c.key_ingredient),diet:a(c.diet),servings:c.servings,steps:c.steps,ingredients:[]};return c.nutrients=b.build(),c.ingredients.forEach(function(a){c.nutrients.sum(a.nutrients);var b={id:a.id,measure:a.measures[a.selectedMeasure].label,measure_amount:a.selectedAmount};d.ingredients.push(b)}),d.nutrients=c.nutrients.toJson(),d}function i(a){function b(){return void 0!==a&&void 0!==a.id}function c(){var b=!0;return d.ingredients.some(function(c){return c.id===a.id?(b=!1,!0):void 0}),b}var d=this;b()&&c()&&d.ingredients.push(a)}function j(a){var b=this.servings;this.nutrients.items.forEach(function(c){c.value*=a/b})}return d.prototype.loadIngredients=g,d.prototype.addIngredient=i,d.prototype.setServings=j,d.prototype.toJson=h,d.fromJson=f,d.build=e,d}angular.module("mealPlanner.recipes").factory("RecipeFactory",a),a.$inject=["ENV","NutrientCollectionFactory","IngredientService"]}(),function(){"use strict";function a(a,b){function c(){return a.get("modules/recipes/data/dish_type.json",{cache:!0}).then(function(a){return g(a.data)})}function d(){return a.get("modules/recipes/data/cuisine.json",{cache:!0}).then(function(a){return g(a.data)})}function e(){return a.get("modules/recipes/data/key_ingredient.json",{cache:!0}).then(function(a){return g(a.data)})}function f(){return a.get("modules/recipes/data/diet.json",{cache:!0}).then(function(a){return g(a.data)})}function g(a){return a.map(function(a){return a.background=b.contentEndpoint+a.background,a})}return{getDishTypes:c,getCuisines:d,getKeyIngredients:e,getDiets:f}}angular.module("mealPlanner.recipes").service("RecipeGroupService",a),a.$inject=["$http","ENV"]}(),function(){"use strict";function a(a,b,c){function d(a){function c(a){return b.fromJson(a)}return i.get({id:a}).$promise.then(c)}function e(a,b,c,d){return i.query({filter_by:a,filter_value:b,query:c,limit:d}).$promise.then(f)}function f(a){var c=[];return a.forEach(function(a){c.push(b.fromJson(a))}),c}function g(a,b){return a?i.update({id:a},b).$promise:i.save(b).$promise}function h(a){return i["delete"]({id:a}).$promise}var i=a(c.apiEndpoint+"recipes/:id",null,{update:{method:"PUT"}});return{getRecipe:d,searchRecipes:e,saveRecipe:g,deleteRecipe:h}}angular.module("mealPlanner.recipes").service("RecipeService",a),a.$inject=["$resource","RecipeFactory","ENV"]}(),function(){"use strict";function a(a,b,c,d){var e=this;e.groups=[{title:"Dish Type",tiles:a,paramKey:"dish_type"},{title:"Cuisine",tiles:b,paramKey:"cuisine"},{title:"Key Ingredient",tiles:c,paramKey:"key_ingredient"},{title:"Diet",tiles:d,paramKey:"diet"}]}angular.module("mealPlanner.recipes").controller("RecipesGroupsController",a),a.$inject=["dishTypes","cuisines","keyIngredients","diets"]}(),function(){"use strict";
function a(a,b,c,d,e){function f(a){c.navigationBar.isLoading=!0,d.searchRecipes(b.filterName,b.filterValue,a).then(function(a){c.navigationBar.isLoading=!1,h.items=a})}function g(b){a.go("viewRecipe",{recipeId:b})}var h=this;h.items=e,h.searchRecipes=f,h.openRecipe=g,c.navigationBar.title="Recipes › "+b.filterValue,c.navigationBar.searchCallback=f}angular.module("mealPlanner.recipes").controller("RecipesListController",a),a.$inject=["$state","$stateParams","NavigationService","RecipeService","recipes"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i,j){function k(){0===l.recipe.ingredients.length?c.show(c.alert().parent(angular.element(document.body)).title("No ingredients").content("Please, add at least one ingredient to this recipe.").ariaLabel("No ingredients alert").ok("OK")):(l.saveButtonDisabled=!0,d.navigationBar.isLoading=!0,e.saveRecipe(l.recipe.id,l.recipe.toJson()).then(function(c){a.go("viewRecipe",{recipeId:c.id}),b.show({template:"<md-toast>Recipe was saved!</md-toast>",position:"bottom left",hideDelay:3e3})},function(a){l.saveButtonDisabled=!1,d.handleError(a.data.error)}))}var l=this;f.id&&(d.navigationBar.title=f.name),l.recipe=f,l.dishTypes=g,l.cuisines=h,l.keyIngredients=i,l.diets=j,l.image={src:""},l.saveRecipe=k}angular.module("mealPlanner.recipes").controller("RecipeEditController",a),a.$inject=["$state","$mdToast","$mdDialog","NavigationService","RecipeService","recipe","dishTypes","cuisines","keyIngredients","diets"]}(),function(){"use strict";function a(a,b,c,d){function e(){b.getGroups().then(function(a){j.groups=a})}function f(){c.getIngredients(j.chosenGroup,j.currentPosition,j.pageSize).then(function(a){a.forEach(function(a){a.energy=a.nutrients.find("energy").value,j.ingredients.push(a)}),j.currentPosition+=j.pageSize})}function g(b){d.addIngredient(b),a.cancel()}function h(){a.cancel()}function i(){j.chosenGroup=null,j.ingredients=[],j.currentPosition=0}var j=this;return j.cancelDialog=h,j.loadIngredients=f,j.addIngredient=g,j.backToGroups=i,j.groups=[],j.ingredients=[],j.pageSize=25,j.currentPosition=0,e()}angular.module("mealPlanner.recipes").controller("IngredientBrowserController",a),a.$inject=["$mdDialog","IngredientGroupService","IngredientService","recipe"]}(),function(){"use strict";function a(a,b){var c=this;c.recipe=a,b.navigationBar.title=a.name}angular.module("mealPlanner.recipes").controller("RecipeViewController",a),a.$inject=["recipe","NavigationService"]}(),function(){"use strict";function a(a,b){function c(c){function d(){return b.searchIngredients(c.searchText)}function e(a){c.searchText="",c.recipe.addIngredient(a)}function f(b){a.show({controller:"IngredientBrowserController",controllerAs:"ctrl",bindToController:!0,templateUrl:"modules/recipes/views/ingredient-browser.html",targetEvent:b,locals:{recipe:c.recipe}})}c.searchText=null,c.querySearch=d,c.addIngredient=e,c.openIngredientBrowser=f}return{templateUrl:"modules/recipes/views/directive.ingredient-picker.html",link:c,scope:{recipe:"="}}}angular.module("mealPlanner.recipes").directive("mpRecipeIngredientPicker",a),a.$inject=["$mdDialog","IngredientService"]}(),function(){"use strict";function a(){function a(a){function b(b){a.recipe.ingredients.splice(b,1)}a.removeIngredient=b}return{templateUrl:"modules/recipes/views/directive.ingredient-list.html",link:a,scope:{recipe:"="}}}angular.module("mealPlanner.recipes").directive("mpRecipeIngredientList",a)}(),function(){"use strict";function a(){function a(a){function b(){a.recipe.steps.push("")}function c(b){a.recipe.steps.splice(b,1)}a.addCookingStep=b,a.removeCookingStep=c}return{templateUrl:"modules/recipes/views/directive.recipe-steps.html",link:a,scope:{recipe:"="}}}angular.module("mealPlanner.recipes").directive("mpRecipeSteps",a)}(),function(){"use strict";function a(){return{templateUrl:"modules/recipes/views/directive.recipe-info.html",scope:{recipe:"="}}}angular.module("mealPlanner.recipes").directive("mpRecipeInfo",a)}(),function(){"use strict";angular.module("mealPlanner.planner",["LocalStorageModule","tc.chartjs"])}(),function(){"use strict";angular.module("mealPlanner.planner").config(["$stateProvider",function(a){a.state("planner",{url:"/",templateUrl:"modules/planner/views/planner.html",controller:"PlannerController",controllerAs:"ctrl",pageTitle:"Meal Plan"})}])}(),function(){"use strict";function a(a){function b(){var a=this;a.servings=1,a.nutrients={}}function c(){return new b}function d(a,b){var d=c();return d.recipe_id=a.id,d.imageUrl=a.imageUrl,d.name=a.name,d.type=b,d.servings=a.servings,d.nutrients=a.nutrients,d}function e(b){var d=c();return d.recipe_id=b.recipe_id,d.imageUrl=b.imageUrl,d.name=b.name,d.type=b.type,d.servings=b.servings,d.nutrients=a.fromJson(b.nutrients),d}function f(){var a={recipe_id:this.recipe_id,imageUrl:this.imageUrl,name:this.name,type:this.type,servings:this.servings,nutrients:this.nutrients.toJson()};return a}return b.prototype.toJson=f,b.build=c,b.fromRecipe=d,b.fromJson=e,b}angular.module("mealPlanner.planner").factory("MealFactory",a),a.$inject=["NutrientCollectionFactory"]}(),function(){"use strict";function a(a,b){function c(b){this.name=b,this.meals=[],this.nutrients=a.build()}function d(a,c){var d=b.fromRecipe(a,c);this.meals.push(d),this.nutrients.sum(d.nutrients)}function e(a){var b=this.meals.indexOf(a);-1!==b&&(this.nutrients.subtract(a.nutrients),this.meals.splice(b,1))}function f(a){return new c(a)}function g(a){var c=f(a.name);return a.meals.forEach(function(a){var d=b.fromJson(a);c.meals.push(d),c.nutrients.sum(d.nutrients)}),c}function h(){var a={name:this.name,meals:this.meals.map(function(a){return a.toJson()})};return a}return c.prototype.addMeal=d,c.prototype.removeMeal=e,c.prototype.toJson=h,c.build=f,c.fromJson=g,c}angular.module("mealPlanner.planner").factory("PlanDayFactory",a),a.$inject=["NutrientCollectionFactory","MealFactory"]}(),function(){"use strict";function a(a,b){function c(b){var c=this;c.name=b,c.days=[],c.nutrients=a.build()}function d(){var b=this;b.nutrients=a.build(),b.days.forEach(function(a){b.nutrients.sum(a.nutrients)})}function e(a){var d=new c(a||"default");return h.forEach(function(a){d.days.push(b.build(a))}),d}function f(a){var c=e(a.name);return a.days.forEach(function(a,d){c.days[d]=b.fromJson(a)}),c}function g(){var a={name:this.name,days:this.days.map(function(a){return a.toJson()})};return a}var h=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];return c.prototype.updateNutritionValues=d,c.prototype.toJson=g,c.build=e,c.fromJson=f,c}angular.module("mealPlanner.planner").factory("PlanFactory",a),a.$inject=["NutrientCollectionFactory","PlanDayFactory"]}(),function(){"use strict";function a(a,b){function c(){var c=a.get("plan");return c?b.fromJson(c):b.build()}function d(b){a.set("plan",b.toJson())}var e=["Breakfast","Lunch","Dinner","Snack"];return{mealTypes:e,getPlan:c,saveLocalPlan:d}}angular.module("mealPlanner.planner").service("PlanService",a),a.$inject=["localStorageService","PlanFactory"]}(),function(){"use strict";function a(a,b){function c(a,c){a!==c&&b.saveLocalPlan(d.plan)}var d=this;d.plan=b.getPlan(),a.$watch("ctrl.plan.days",c,!0)}angular.module("mealPlanner.planner").controller("PlannerController",a),a.$inject=["$scope","PlanService"]}(),function(){"use strict";function a(a,b,c,d){function e(){m.recipeGroups=[],d.getDishTypes().then(function(a){m.recipeGroups.push({title:"Dish Type",tiles:a,paramKey:"dish_type"})}),d.getCuisines().then(function(a){m.recipeGroups.push({title:"Cuisine",tiles:a,paramKey:"cuisine"})}),d.getKeyIngredients().then(function(a){m.recipeGroups.push({title:"Key Ingredient",tiles:a,paramKey:"key_ingredient"})}),d.getDiets().then(function(a){m.recipeGroups.push({title:"Diet",tiles:a,paramKey:"diet"})})}function f(a,b){m.groupsVisible=!1,m.selectedFilter=a,m.selectedGroup=b,i()}function g(){m.recipes=[],m.searchVisible=!1,m.groupsVisible=!0,m.selectedFilter=null,m.selectedGroup=null}function h(){m.recipes=[],m.searchVisible=!0,m.groupsVisible=!1,m.searchText="",b(function(){document.getElementById("meal-search-field").focus()})}function i(){m.recipes=[],(m.searchText||m.selectedFilter)&&(m.isLoading=!0,c.searchRecipes(m.selectedFilter,m.selectedGroup,m.searchText,l).then(function(a){m.isLoading=!1,m.recipes=a}))}function j(b){a.hide(b)}function k(){a.cancel()}var l=25,m=this;return m.searchVisible=!1,m.groupsVisible=!0,m.searchText="",m.recipes=[],m.selectedFilter=null,m.selectedGroup=null,m.showGroup=f,m.showGroups=g,m.showSearch=h,m.searchRecipes=i,m.cancelDialog=k,m.addRecipe=j,e()}angular.module("mealPlanner.planner").controller("MealSelectorController",a),a.$inject=["$mdDialog","$timeout","RecipeService","RecipeGroupService"]}(),function(){"use strict";function a(a,b,c){function d(d){function e(a,c){i=c,b.show({controller:"MealSelectorController",controllerAs:"ctrl",bindToController:!0,templateUrl:"modules/planner/views/meal-selector.html",targetEvent:a}).then(f)}function f(a){d.day.addMeal(a,i)}function g(b){a.go("viewRecipe",{recipeId:b.recipe_id})}function h(a){d.day.removeMeal(a)}var i;d.mealTypes=c.mealTypes,d.showMealSelector=e,d.removeMeal=h,d.viewMeal=g}return{templateUrl:"modules/planner/views/directive.plan-day.html",link:d,scope:{day:"="}}}angular.module("mealPlanner.planner").directive("mpPlanDay",a),a.$inject=["$state","$mdDialog","PlanService"]}();